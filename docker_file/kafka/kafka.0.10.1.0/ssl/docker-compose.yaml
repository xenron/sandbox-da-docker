version: '2.0'
services:
  zookeeper0:
    build:
      context: .
      dockerfile: zookeeper.Dockerfile
    image: jason/zookeeper:3.4.8
    container_name: zookeeper0
    hostname: zookeeper0
    ports:
      - "12181:12181"
      - "12888:12888"
      - "13888:13888"
    expose:
      - 12181
      - 12888
      - 13888
    environment:
      ZOOKEEPER_PORT: 12181
      ZOOKEEPER_ID: 0
      ZOOKEEPER_SERVERS: server.0=zookeeper0:12888:13888 server.1=zookeeper1:12889:13889 server.2=zookeeper2:12890:13890
  zookeeper1:
    build:
      context: .
      dockerfile: zookeeper.Dockerfile
    image: jason/zookeeper:3.4.8
    container_name: zookeeper1
    hostname: zookeeper1
    ports:
      - "12182:12182"
      - "12889:12889"
      - "13889:13889"
    expose:
      - 12182
      - 12889
      - 13889
    environment:
      ZOOKEEPER_PORT: 12182
      ZOOKEEPER_ID: 1
      ZOOKEEPER_SERVERS: server.0=zookeeper0:12888:13888 server.1=zookeeper1:12889:13889 server.2=zookeeper2:12890:13890
#    depends_on:
#      - zookeeper0
  zookeeper2:
    build:
      context: .
      dockerfile: zookeeper.Dockerfile
    image: jason/zookeeper:3.4.8
    container_name: zookeeper2
    hostname: zookeeper2
    ports:
      - "12183:12183"
      - "12890:12890"
      - "13890:13890"
    expose:
      - 12183
      - 12890
      - 13890
    environment:
      ZOOKEEPER_PORT: 12183
      ZOOKEEPER_ID: 2
      ZOOKEEPER_SERVERS: server.0=zookeeper0:12888:13888 server.1=zookeeper1:12889:13889 server.2=zookeeper2:12890:13890
#    depends_on:
#        - zookeeper1
  kafka0:
    build:
      context: .
      dockerfile: kafka.0.10.1.0.Dockerfile
    image: jason/kafka:0.10.1.0
    container_name: kafka0
    hostname: kafka0
    ports:
      - "19092:19092"
      - "29092:29092"
      - "18083:18083"
      - "12345:12345"
    environment:
      ZOOKEEPER_CONNECT: zookeeper0:12181,zookeeper1:12182,zookeeper2:12183/kafka
      BROKER_ID: 0
      LISTENERS: PLAINTEXT://kafka0:19092,SSL://kafka0:29092
      ZOOKEEPER_SESSION_TIMEOUT: 3600000
      CONNECT_REST_PORT: 18083
      KAFKA_PROPERTY_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_PROPERTY_SSL_CLIENT_AUTH: required
      JMX_PORT: 12345
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ca:/opt/kafka/ca
    depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2
    expose:
      - 9092
#    links:
#      - zookeeper
  kafka1:
    build:
      context: .
      dockerfile: kafka.0.10.1.0.Dockerfile
    image: jason/kafka:0.10.1.0
    container_name: kafka1
    hostname: kafka1
    ports:
      - "19093:19093"
      - "29093:29093"
      - "18084:18084"
      - "12346:12346"
    environment:
      ZOOKEEPER_CONNECT: zookeeper0:12181,zookeeper1:12182,zookeeper2:12183/kafka
      BROKER_ID: 1
      LISTENERS: PLAINTEXT://kafka1:19093,SSL://kafka1:29093
      ZOOKEEPER_SESSION_TIMEOUT: 3600000
      CONNECT_REST_PORT: 18084
      KAFKA_PROPERTY_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_PROPERTY_SSL_CLIENT_AUTH: required
      JMX_PORT: 12346
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ca:/opt/kafka/ca
    depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2
    expose:
      - 9093
#    links:
#      - zookeeper
  kafka2:
    build: .
    build:
      context: .
      dockerfile: kafka.0.10.1.0.Dockerfile
    image: jason/kafka:0.10.1.0
    container_name: kafka2
    hostname: kafka2
    ports:
      - "19094:19094"
      - "29094:29094"
      - "18085:18085"
      - "12347:12347"
    environment:
      ZOOKEEPER_CONNECT: zookeeper0:12181,zookeeper1:12182,zookeeper2:12183/kafka
      BROKER_ID: 2
      LISTENERS: PLAINTEXT://kafka2:19094,SSL://kafka2:29094
      ZOOKEEPER_SESSION_TIMEOUT: 3600000
      CONNECT_REST_PORT: 18085
      KAFKA_PROPERTY_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_PROPERTY_SSL_CLIENT_AUTH: required
      JMX_PORT: 12347
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka2"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ca:/opt/kafka/ca
    depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2
    expose:
      - 9094
  kafka3:
    build:
      context: .
      dockerfile: kafka.0.10.1.0.Dockerfile
    image: jason/kafka:0.10.1.0
    container_name: kafka3
    hostname: kafka3
    ports:
      - "19095:19095"
      - "29095:29095"
      - "18086:18086"
      - "12348:12348"
    environment:
      ZOOKEEPER_CONNECT: zookeeper0:12181,zookeeper1:12182,zookeeper2:12183/kafka
      BROKER_ID: 3
      LISTENERS: PLAINTEXT://kafka3:19095,SSL://kafka3:29095
      ZOOKEEPER_SESSION_TIMEOUT: 3600000
      CONNECT_REST_PORT: 18086
      KAFKA_PROPERTY_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_PROPERTY_SSL_CLIENT_AUTH: required
      JMX_PORT: 12348
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ca:/opt/kafka/ca
    depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2
    expose:
      - 19095
      - 29095
#    links:
#      - zookeeper
  kafka4:
    build:
      context: .
      dockerfile: kafka.0.10.1.0.Dockerfile
    image: jason/kafka:0.10.1.0
    container_name: kafka4
    hostname: kafka4
    ports:
      - "19096:19096"
      - "29096:29096"
      - "18087:18087"
      - "12349:12349"
    environment:
      ZOOKEEPER_CONNECT: zookeeper0:12181,zookeeper1:12182,zookeeper2:12183/kafka
      BROKER_ID: 4
      LISTENERS: PLAINTEXT://kafka4:19096,SSL://kafka4:29096
      ZOOKEEPER_SESSION_TIMEOUT: 3600000
      CONNECT_REST_PORT: 18087
      KAFKA_PROPERTY_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_PROPERTY_SSL_CLIENT_AUTH: required
      JMX_PORT: 12349
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ca:/opt/kafka/ca
    depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2
    expose:
      - 29096
      - 19096
#    links:
#      - zookeeper
  kafka5:
    build: .
    build:
      context: .
      dockerfile: kafka.0.10.1.0.Dockerfile
    image: jason/kafka:0.10.1.0
    container_name: kafka5
    hostname: kafka5
    ports:
      - "19097:19097"
      - "29097:29097"
      - "18088:18088"
      - "12350:12350"
    environment:
      ZOOKEEPER_CONNECT: zookeeper0:12181,zookeeper1:12182,zookeeper2:12183/kafka
      BROKER_ID: 5
      LISTENERS: PLAINTEXT://kafka5:19097,SSL://kafka5:29097
      ZOOKEEPER_SESSION_TIMEOUT: 3600000
      CONNECT_REST_PORT: 18088
      KAFKA_PROPERTY_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_PROPERTY_SSL_CLIENT_AUTH: required
      JMX_PORT: 12350
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka2"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ca:/opt/kafka/ca
    depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2
    expose:
      - 19097
      - 29097
  kafka-manager:
    build: .
    build:
      context: .
      dockerfile: kafka-manager.Dockerfile
    image: jason/kafka-manager:1.0
    container_name: kafka-manager
    hostname: kafka-manager
    ports:
      - "38080:38080"
    environment:
      ZK_HOSTS: zookeeper0:12181
      PORT: 38080
    expose:
      - 38080
